name: new_envs_metadata

on: 
    workflow_dispatch:
#      inputs:
#       my_input_value:
#         description: 'Enter file'
#         required: true

env:
     # SCRIBE_URL: "https://airflow.dev.scribesecurity.com/"
     # SCRIBE_LOGIN_URL: "https://scribe-hub-dev.us.auth0.com"
     # SCRIBE_AUDIENCE: "api.dev.scribesecurity.com"
     # SCRIBE_URL: "https://airflow.staging.scribesecurity.com/"
     # SCRIBE_LOGIN_URL: "https://scribe-hub-staging.us.auth0.com"
     # SCRIBE_AUDIENCE: "api.staging.scribesecurity.com"
     SCRIBE_URL: https://airflow.scribesecurity.com
     SCRIBE_LOGIN_URL: https://scribe-hub-production.us.auth0.com
     SCRIBE_AUDIENCE: api.production.scribesecurity.com
     LOGICAL_APP_NAME: dev_metadata
     APP_VERSION: 1.0.3 # The app version all these SBOMs will be assosiated with
     # SBOM Author meta data - Optional
     AUTHOR_NAME: Alona Dodukh
     AUTHOR_EMAIL: alona@gmail.com 
     AUTHOR_PHONE: 000-0000-000-99
     # SBOM Supplier meta data - Optional
     SUPPLIER_NAME: Scribe-Security 
     SUPPLIER_URL: www.scribesecurity.com 
     SUPPLIER_EMAIL: info@scribesecurity.com
     SUPPLIER_PHONE: 001-001-0011

jobs:

 scribe-report-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    
    steps: 
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # - name: Read JSON file and set custom_env
      #   id: set_custom_env
      #   run: echo "custom_env=$(cat my_metdata_base.json)" >> $GITHUB_ENV  
        
      - name: Scm generate bom, upload to scribe
        id: valint_bom_scm
        uses: scribe-security/action-bom@master
        # uses: scribe-security/action-bom@dev
        with:
          type: dir
          target: ./
          verbose: 2
          scribe-enable: true
          scribe-client-id: ${{ secrets.SCRIBE_PROD_NEW_CLIENT_ID}}
          scribe-client-secret: ${{ secrets.SCRIBE_PROD_NEW_CLIENT_SECRET }}
          product-key: "000_metadata"
          scribe-url: ${{ env.SCRIBE_URL }}
          scribe-login-url: ${{ env.SCRIBE_LOGIN_URL }}
          scribe-audience: ${{ env.SCRIBE_AUDIENCE }}
          # app-name: $LOGICAL_APP_NAME
          # app-version: $APP_VERSION
          product-version: "version1"
          author-name: $AUTHOR_NAME
          author-email: $AUTHOR_EMAIL
          author-phone: $AUTHOR_PHONE
          supplier-name: $SUPPLIER_NAME
          supplier-url: $SUPPLIER_URL
          supplier-email: $SUPPLIER_EMAIL 
          supplier-phone: $SUPPLIER_PHONE
          env: user_metadata
          force: true
        env:
          user_metadata: ${{ env.custom_env }}

      - name: build image
        run: |
          docker build -t my-image:latest .
       
      - name: Read JSON file and set custom_env
        id: set_custom_env
        run: echo "custom_env=$(cat my_metdata_base.json)" >> $GITHUB_ENV
      
      - name: Image generate bom, upload to scribe
        id: valint_bom_image
        uses: scribe-security/action-bom@master
        # uses: scribe-security/action-bom@dev
        with:
          type: docker
          target: my-image:latest
          # target: mongo-express:latest
          verbose: 2
          format: attest
          scribe-enable: true
          scribe-client-id: ${{ secrets.SCRIBE_PROD_NEW_CLIENT_ID }}
          scribe-client-secret: ${{ secrets.SCRIBE_PROD_NEW_CLIENT_SECRET }}
          product-key: "000_metadata"
          scribe-url: ${{ env.SCRIBE_URL }}
          scribe-login-url: ${{ env.SCRIBE_LOGIN_URL }}
          scribe-audience: ${{ env.SCRIBE_AUDIENCE }}
          # app-name: $LOGICAL_APP_NAME
          # app-version: $APP_VERSION
          # author-name: $AUTHOR_NAME
          product-version: "version1"
          author-email: $AUTHOR_EMAIL
          author-phone: $AUTHOR_PHONE
          supplier-name: $SUPPLIER_NAME
          supplier-url: $SUPPLIER_URL
          supplier-email: $SUPPLIER_EMAIL 
          supplier-phone: $SUPPLIER_PHONE
          env: user_metadata
          force: true
        env:
          user_metadata: ${{ env.custom_env }}
#           DEBUG: true
      - name: Generate SLSA provenance statement
        id: valint_slsa_statement
        uses: scribe-security/action-bom@master
        with:
                # target: 'docker:${{ github.repository }}:${{ github.sha }}'
                type: docker
                target: my-image:latest
                format: statement-slsa
                product-key: "000_metadata"
                scribe-client-id: ${{ secrets.SCRIBE_PROD_NEW_CLIENT_ID }}
                scribe-client-secret: ${{ secrets.SCRIBE_PROD_NEW_CLIENT_SECRET }}
                scribe-url: ${{ env.SCRIBE_URL }}
                scribe-login-url: ${{ env.SCRIBE_LOGIN_URL }}
                scribe-audience: ${{ env.SCRIBE_AUDIENCE }}
                

      - uses: actions/upload-artifact@v3
        with:
                name: provenance
                path: ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}
        

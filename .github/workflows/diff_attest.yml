name:  different_attestations

env:
  LOGICAL_APP_NAME: dev_new_last_version # The app name all these SBOMs will be assosiated with
  # SBOM Author meta data - Optional
  AUTHOR_NAME: Alona Dodukh
  AUTHOR_EMAIL: alona@thiscompany.com 
  AUTHOR_PHONE: 11-00-999
  # SBOM Supplier meta data - Optional
  SUPPLIER_NAME: Scribe-Security 
  SUPPLIER_URL: www.scribesecurity.com 
  SUPPLIER_EMAIL: info@scribesecurity.com
  SUPPLIER_PHONE: 001-001-0011
  PRODUCT_NAME: ${{ github.event.inputs.product_name }}
  PRODUCT_VERSION: ${{ github.event.inputs.product_version }}
  SCRIBE_URL: ${{ vars.SCRIBE_URL }}
  SCRIBE_LOGIN_URL: ${{ vars.SCRIBE_LOGIN_URL }}
  SCRIBE_AUDIENCE: ${{ vars.SCRIBE_AUDIENCE }}

on: 
  workflow_dispatch:
   inputs:
      environment:
        type: choice
        description: Environment
        required: true
        options:
          - dev
          - stg
          - prod
      product_version:
         description: 'Put product version'
         # required: true
         default: '0.0.0'
      product_name:
         description: 'Put product name'
         # required: true
         default: 'Test_product'
  

jobs:
  build:
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest

    permissions:
        contents: read
        packages: write
        id-token: write
    
    steps:

      - uses: actions/checkout@v4

      - name: Read JSON file and set custom_env
        id: set_custom_env
        run: echo "file=$(cat my_metdata_base.json)" >> $GITHUB_ENV  
      
      - name: Generate signed git SBOM for repo content
        uses: scribe-security/action-bom@dev
        with:
        #   target: 'https://github.com/mongo-express/mongo-express.git'
         target: 'git:.'
        # format: statement-cyclonedx-json, attest-cyclonedx-json, statement-generic	
         format: attest
         scribe-enable: true
         product-key: $PRODUCT_NAME
         product-version: $PRODUCT_VERSION
         scribe-client-id: ${{ secrets.CLIENT_ID }}
         scribe-client-secret: ${{ secrets.CLIENT_SECRET }}
         scribe-url: $SCRIBE_URL
         scribe-login-url: $SCRIBE_LOGIN_URL
         scribe-audience: $SCRIBE_AUDIENCE
         components: packages,files,dep
         author-name: $AUTHOR_NAME
         author-email: $AUTHOR_EMAIL
         author-phone: $AUTHOR_PHONE
         supplier-name: $SUPPLIER_NAME
         supplier-url: $SUPPLIER_URL
         supplier-email: $SUPPLIER_EMAIL 
         supplier-phone: $SUPPLIER_PHONE


      - name: Scm generate dir bom, upload to scribe
        # id: valint_bom_scm
        uses: scribe-security/action-bom@dev
        with:
          type: dir
          target: ./
          scribe-enable: true
          product-key: $PRODUCT_NAME
          product-version: $PRODUCT_VERSION
          scribe-client-id: ${{ secrets.CLIENT_ID }}
          scribe-client-secret: ${{ secrets.CLIENT_SECRET }}
          scribe-url: $SCRIBE_URL
          scribe-login-url: $SCRIBE_LOGIN_URL
          scribe-audience: $SCRIBE_AUDIENCE
         # format: statement-cyclonedx-json, attest-cyclonedx-json, statement-generic	
          format: attest
         # app-name: $LOGICAL_APP_NAME
         # app-version: $APP_VERSION
          components: packages,files,dep
          author-name: $AUTHOR_NAME
          author-email: $AUTHOR_EMAIL
          author-phone: $AUTHOR_PHONE
          supplier-name: $SUPPLIER_NAME
          supplier-url: $SUPPLIER_URL
          supplier-email: $SUPPLIER_EMAIL 
          supplier-phone: $SUPPLIER_PHONE

      - name: Build the Docker image
          # run: docker build . -t ${{ github.repository }}:${{ github.sha }}
        run: |
            docker build -t my-image:latest .   
     
      - name: Generate signed docker SBOM for docker image
        uses: scribe-security/action-bom@dev
        with:
                # statement-cyclonedx-json, attest, 
                # target: 'docker:${{ github.repository }}:${{ github.sha }}'
                type: docker
                target: my-image:latest
                scribe-enable: true
                product-key: $PRODUCT_NAME
                product-version: $PRODUCT_VERSION
                format: statement-cyclonedx-json
                scribe-client-id: ${{ secrets.CLIENT_ID }}
                scribe-client-secret: ${{ secrets.CLIENT_SECRET }}
                scribe-url: $SCRIBE_URL
                scribe-login-url: $SCRIBE_LOGIN_URL
                scribe-audience: $SCRIBE_AUDIENCE
                # author-name: $AUTHOR_NAME
                author-email: $AUTHOR_EMAIL
                author-phone: $AUTHOR_PHONE
                supplier-name: $SUPPLIER_NAME
                supplier-url: $SUPPLIER_URL
                supplier-email: $SUPPLIER_EMAIL 
                supplier-phone: $SUPPLIER_PHONE

          
      - name: Scm generate registry:busybox:latest bom, upload to scribe
        # id: valint_bom_scm
        uses: scribe-security/action-bom@dev
        with:
          type: image
          target: registry:busybox:latest
          scribe-enable: true
          product-key: $PRODUCT_NAME
          product-version: $PRODUCT_VERSION
          scribe-client-id: ${{ secrets.CLIENT_ID }}
          scribe-client-secret: ${{ secrets.CLIENT_SECRET }}
          scribe-url: $SCRIBE_URL
          scribe-login-url: $SCRIBE_LOGIN_URL
          scribe-audience: $SCRIBE_AUDIENCE
         # format: statement-cyclonedx-json, attest-cyclonedx-json, statement-generic	
          format: attest
         # app-name: $LOGICAL_APP_NAME
         # app-version: $APP_VERSION
          components: packages,files,dep
      
      - name: Scm generate file sbom, upload to scribe
        # id: valint_bom_scm
        uses: scribe-security/action-bom@dev
        with:
          type: file
          target: ./package.json
          scribe-enable: true
          product-key: $PRODUCT_NAME
          product-version: $PRODUCT_VERSION
          scribe-client-id: ${{ secrets.CLIENT_ID }}
          scribe-client-secret: ${{ secrets.CLIENT_SECRET }}
          scribe-url: $SCRIBE_URL
          scribe-login-url: $SCRIBE_LOGIN_URL
          scribe-audience: $SCRIBE_AUDIENCE
         # format: statement-cyclonedx-json, attest-cyclonedx-json, statement-generic	
          format: attest
         # app-name: $LOGICAL_APP_NAME
         # app-version: $APP_VERSION
          components: packages,files,dep
          
      
      - name: Generate SLSA provenance statement
        id: valint_slsa_statement
        uses: scribe-security/action-bom@dev
        with:
                # target: 'docker:${{ github.repository }}:${{ github.sha }}'
                type: docker
                target: my-image:latest
                # attest-slsa, statement-slsa, attest-generic
                scribe-enable: true
                format: attest-slsa
                product-key: $PRODUCT_NAME
                product-version: $PRODUCT_VERSION
                scribe-client-id: ${{ secrets.CLIENT_ID }}
                scribe-client-secret: ${{ secrets.CLIENT_SECRET }}
                scribe-url: $SCRIBE_URL
                scribe-login-url: $SCRIBE_LOGIN_URL
                scribe-audience: $SCRIBE_AUDIENCE
                # author-name: $AUTHOR_NAME
                # author-email: $AUTHOR_EMAIL
                # author-phone: $AUTHOR_PHONE
                # supplier-name: $SUPPLIER_NAME
                # supplier-url: $SUPPLIER_URL
                # supplier-email: $SUPPLIER_EMAIL
                # supplier-phone: $SUPPLIER_PHONE
                # ca: ${{ secrets.COMPANY_CA }}
                # cert: ${{ secrets.SIGNER_CERT }}
                # key: ${{ secrets.SIGNER_KEY }}
                
      - uses: actions/upload-artifact@v3
        with:
                name: provenance
                path: ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}
        

          

       
